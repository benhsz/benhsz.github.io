<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Not Without Purpose</title><link>https://benhsz.github.io/</link><description>Recent content on Not Without Purpose</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 22 Jul 2022 20:41:41 +0200</lastBuildDate><atom:link href="https://benhsz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>The Modern Video Game Usability Crisis</title><link>https://benhsz.github.io/the-modern-video-game-usability-crisis/</link><pubDate>Fri, 22 Jul 2022 20:41:41 +0200</pubDate><guid>https://benhsz.github.io/the-modern-video-game-usability-crisis/</guid><description>&lt;p>Video game graphics have changed a lot over the past few decades, becoming increasingly realistic. I&amp;rsquo;m here to argue this has been a very bad development. Ironically, this means that, in some ways, games in the past had better graphics than today&amp;rsquo;s games.&lt;/p>
&lt;p>The problem with realistic graphics is that it gives the player an impractical number of shapes to work with. Instead, any benefit of such graphics lies with the marketing of such games, which I think is the reason why games with complicated graphics are still around, despite the enormous development costs.&lt;/p>
&lt;p>When I was young, I noticed how rapidly graphics were improving in the 1990s and wondered how awesome video games would be in the future, like in the year 2015. Obviously, we&amp;rsquo;d have flying cars and hoverboards, but what would video games look like?&lt;/p>
&lt;p>I could have never imagined the improvement in technology would have such a negative effect on games. Now, we are years beyond even 2015, and video games are very much &lt;em>not&lt;/em> awesome.&lt;/p>
&lt;p>But how could it be that realistic graphics are problematic? I mean&amp;hellip; real-life is realistic, ain&amp;rsquo;t it? Real-life obviously presents you with realistic graphics, showing you a great number of shapes, and it seems to not present any difficulty. The short answer is, realistic graphics are difficult because games have rules that are unlike rules in real-life, which makes you interpret game graphics very differently. This interpretation process is part of the gameplay experience. Further, realistic imagery contains irrelevant information, making it harder to discern relevant information within the game. Past hardware limitations are practically gone now, but these limitations were actually helpful to the experience, in part because they made graphics more abstract.&lt;/p>
&lt;h1 id="the-rules-of-the-game">The Rules of the Game&lt;/h1>
&lt;p>If I were to see a mundane thing such as a coffee mug in real life, I wouldn&amp;rsquo;t ask myself how I interact with that object; it is what it is. Yet, if I were to see a coffee mug in a first-person shooter, I might immediately be dealing with dozens of questions. Can I pick it up and drink from it? If so, would it replenish my health, or energy? Can I grab it and throw it like a weapon? If so, how much damage would it do? What would happen if I shoot the mug? Needless to say, I wouldn&amp;rsquo;t ask such questions in real-life.&lt;/p>
&lt;p>The summary of these questions would be: What is the meaning of this thing? In real-life, the meaning of things is fixed, but not so in a game. A thing in a game is an element, and games have rules about their elements. This fact has major implications for game design.&lt;/p>
&lt;p>When looking at the screen, players try to discern gameplay elements from the graphics. The meaning of these elements is gradually explored over time. It could be useful to give this a name. We can call this process &lt;em>Discernment of Elements and Exploration of Meaning&lt;/em>, or DEEM.&lt;/p>
&lt;p>DEEM is arguably a fundamental part of gameplay. Games are all about interactivity, but that doesn&amp;rsquo;t mean you need to be mashing buttons the entire time. You could be looking at the screen while &lt;em>not&lt;/em> pushing any buttons and still be highly preoccupied.&lt;/p>
&lt;h1 id="moving-pictures">Moving Pictures&lt;/h1>
&lt;p>Modern games are distinguished from past games by the immense detail of graphics and real-time rendering of lighting. (If older games had highly detailed graphics and fancy lighting, then it wasn&amp;rsquo;t rendered in real-time. And therein lies the rub.)&lt;/p>
&lt;p>Because shapes within objects may be meaningful, elements are more about shapes than objects. If an object lacks abstraction, it may contain a multitude of shapes, depending on how it is rendered. The lack of abstraction impedes the discernment of elements by the sheer number of shapes. &lt;!-- raw HTML omitted -->Another reason for difficulty in discerning elements is that real-time lighting may cause elements to appear to blend together&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> in a way that wouldn&amp;rsquo;t happen in the absence of such lighting.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>If the player is given enough time to discern elements (as with point-and-click adventure games) these things may not necessarily be problematic. But there&amp;rsquo;s never enough time in action games, because the game&amp;rsquo;s mechanics are responsible for rapid changes in graphics (such as moving the camera in a first-person shooter). This creates a mismatch between the speed by which graphics change and the rate at which the player is able to discern elements. Before the player is able to understand the graphics, things will have already changed. If these action mechanics are fundamental to the game, it would mean the game is perpetually out of step with the player&amp;rsquo;s understanding.&lt;/p>
&lt;p>So when graphics change, elements change. But it&amp;rsquo;s important to remember that &lt;em>meaning can be subject to change&lt;/em>. For example, if a player picks up a power-up for a weapon, the weapon may change appearance, signifying that the meaning of the weapon has changed. (The weapon has become more powerful.) Being on the look-out for meaningful change is part of gameplay.&lt;/p>
&lt;p>Real-time lighting and other real-time graphical effects disrupt the exploration of meaning by causing changes in appearance of elements &lt;em>that have not changed in meaning.&lt;/em> The player will learn to recognize that these visual changes are meaningless to gameplay (false positives). But because these advanced effects are rendered in real-time, they are repeated over and over, creating an endless series of false positives. The player is then burdened with the &lt;!-- raw HTML omitted -->task of cutting through this noise and continuously ignore&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> much of the graphical effects as being meaningless to gameplay, while simultaneously being tasked to keep an eye on changes that do matter.&lt;/p>
&lt;p>What is the total effect of all these things on the user experience? It&amp;rsquo;s hard to fully ascertain. But from my own experience, and my observations of fellow gamers, modern graphics make playing games feel like a terrible chore.&lt;/p>
&lt;h1 id="supply-and-demand">Supply and Demand?&lt;/h1>
&lt;p>If video games with simpler graphics are more usable and easier to play, why do games with complicated graphics persist? In this case, the reason is less about what people prefer, and more about what people choose to buy. Even if we assume people prefer games with graphics that are easy to work with, they may still be inclined to buy games with complicated graphics. Complicated graphics get in the way during play, but likely play an important role in the consumer&amp;rsquo;s behavior when choosing to buy a game.&lt;/p>
&lt;p>I remember reading something about how development costs of modern games have skyrocketed due to &amp;lsquo;increased consumer expectations&amp;rsquo;, or some such, meaning that there&amp;rsquo;s demand for games with highly advanced graphics. I don&amp;rsquo;t think there is such a demand. When people want to play a game, they have to make choices, and there are things that influence how people make choices.&lt;/p>
&lt;p>One possible explanation for this &amp;lsquo;demand&amp;rsquo; for highly detailed graphics goes like this. People want to buy products that are well-made, and try to look for signs of a well-made product. If games with highly detailed and technically advanced graphics give the impression that great effort went into the product, it could give the impression that the product is well-made. The graphics are then perceived as a sign that the product is well-made, leading consumers to decide to buy the product. So rather than there being a demand for games with advanced graphics, there is instead a demand for well-made games. That means advanced graphics are there just to get people&amp;rsquo;s attention, which makes it a form of marketing.&lt;/p>
&lt;p>Now, whenever I see some report of how much a certain game cost to be made, and mentions figures, let&amp;rsquo;s say, $100 million development and $50 million marketing, then I think to myself, a major chunk of that development figure is secretly part of the marketing figure. The marketing aspects were pushed into product development.&lt;/p>
&lt;h1 id="marketing">Marketing&lt;/h1>
&lt;p>There was a time when I didn&amp;rsquo;t concern myself with the marketing aspect. A designer should &lt;em>focus on the design&lt;/em>, I thought. The mere thought of polluting the design process with marketing concerns was upsetting to me.&lt;/p>
&lt;p>I&amp;rsquo;ve done a complete reversal on this matter. As a designer, you &lt;em>work&lt;/em> on the design but &lt;em>focus&lt;/em> on the user. In the early stage of development, users are hypothetical, but the day will come when the design is finished, and then, users will have to be real. Design must make contact with people. Marketing is all about making contact.&lt;/p>
&lt;p>But there are those, who dream of not just making contact with &lt;em>some&lt;/em> users, but &lt;em>all&lt;/em> the users. Should they be in charge of development, they will not hesitate to throw the product under the bus to achieve this dream.&lt;/p>
&lt;p>Which seems to be what&amp;rsquo;s happening with modern games. Highly detailed graphics are there for the sake of marketing; helping sales but harming the experience. But on the other hand, the marketing aspect cannot be ignored. Games should be usable, but they should also make contact. Advancement in technology has brought with it a major and unexpected challenge.&lt;/p>
&lt;p>If you try to make a game with simple graphics, it may not get as much attention as a game with complicated graphics. Getting &lt;em>as much&lt;/em> attention may not sound like a big deal, but this is a competitive space. If consumers choose to buy &lt;em>their&lt;/em> game, they may not buy &lt;em>your&lt;/em> game.&lt;/p>
&lt;p>This challenge lies with marketing, not design. How do you get people to be &lt;em>as hyped&lt;/em> for a game with simple graphics as a game with complex graphics? A game with simple graphics today may give the impression of not being particularly ambitious. But that&amp;rsquo;s not necessarily the case! It could in fact be so much more ambitious then those games with ultra-realistic graphics. But how do you convince people of that? How do you get them to be excited?&lt;/p>
&lt;p>It&amp;rsquo;s a difficult problem. Whatever the solution is, it will have to be creative.&lt;/p>
&lt;h1 id="back-to-looking-foward-to-the-future">Back To Looking Foward To The Future&lt;/h1>
&lt;p>DEEM is my answer to the question of why it seems like older games were just plain better. I hope this blog post has made clear that nostalgia (or &lt;em>&amp;ldquo;you&amp;rsquo;re just getting older&amp;rdquo;&lt;/em>) has absolutely nothing to do with.&lt;/p>
&lt;p>Years ago, I played the original Doom (1993) for the first time as I didn&amp;rsquo;t get to play it around the time it was released. When I played it, I was only mildly amused.&lt;/p>
&lt;p>But then I noticed something. Somehow, it was very strangely easy to play. Whenever I play a modern game, it feels like an like overwhelming chore to get into. When I played Doom for the first time, it felt like I could instantly hit the ground running.&lt;/p>
&lt;p>It took a while to make sense of this experience. At first, I thought perhaps the controls were what made it easier. Now I realize it&amp;rsquo;s a bit more complicated than that.&lt;/p>
&lt;p>How wonderful would it be when we would finally have to the power to render ultra-realistic worlds in real-time, forever unshackling game developers of the limitations of hardware&amp;hellip; Not so wonderful, it turns out!&lt;/p>
&lt;p>Still, I&amp;rsquo;m optimistic today&amp;rsquo;s problems can be solved. And should they be solved, who knows what games will look like then?&lt;/p>
&lt;p>In the end, you can never quite know what &lt;!-- raw HTML omitted --> the future will bring.&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Elements can blend together for other reasons, like a particular style of graphics, for example &lt;a href="https://www.twitch.tv/directory/game/Fall%20Guys">Fall Guys&lt;/a> where seemingly everything on the screen has the same soft and colorful look.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>When I browsed &lt;a href="https://www.twitch.tv/">Twitch&lt;/a> for games with advanced graphics, I took a look at Horizon Forbidden West and noticed quite a few instances of UI prompts during gameplay. The game seems to acknowledge that the graphics are mostly nonsense that should be ignored until you encounter something worthwhile, in which case UI prompts appear on the screen.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>No flying cars or hoverboards, though&amp;hellip;&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Why Are Modern Buildings So Ugly?</title><link>https://benhsz.github.io/why-are-modern-buildings-so-ugly/</link><pubDate>Fri, 24 Jun 2022 15:45:55 +0200</pubDate><guid>https://benhsz.github.io/why-are-modern-buildings-so-ugly/</guid><description>&lt;p>For a long time I had a theory for why I felt older buildings were nice to look at. My theory went like this: People feel at ease in stable environments. If a building has stood in place for hundreds of years, it could communicate a sense of stability, in turn fostering a sense that this place is hospitable to human activity.&lt;/p>
&lt;p>It&amp;rsquo;s an interesting theory, but I no longer believe that&amp;rsquo;s what&amp;rsquo;s going on. It just doesn&amp;rsquo;t strike me as a plausible explanation anymore. It would mean any sort of very old structure would look nice, and I don&amp;rsquo;t feel that way. For instance, The Leuven Town Hall is many hundreds of years old and I think it&amp;rsquo;s probably among the ugliest buildings&amp;mdash;nay&amp;mdash;&lt;em>objects&lt;/em> on the entire planet.&lt;/p>
&lt;p>But many old buildings are beautiful. What is it about the design of old buildings that makes them look nice? Especially residential buildings. Modern residential buildings don&amp;rsquo;t look as nice. Some of the very latest residential buildings constructed in my city look pretty bad. What can explain the unpleasant look of modern buildings? Is it the design, or something else? If my pet theory from above were true, all you&amp;rsquo;d need is something that communicates that it is indeed an old building, and then the actual design wouldn&amp;rsquo;t matter all that much. You&amp;rsquo;d be dealing with something that goes beyond design.&lt;/p>
&lt;p>It seems I&amp;rsquo;m not alone in my opinion of modern architecture. Cities like Amsterdam and Utrecht have their retained their historical centers and people seem to really enjoy the look of these cities. Rotterdam and Eindhoven lost many historical buildings in WWII. Rotterdam especially looks very&amp;hellip; &lt;em>modern&lt;/em>, and does not seem to be regarded as a good looking city, which matches my own view.&lt;/p>
&lt;h1 id="built-for-the-future">Built for the Future&lt;/h1>
&lt;p>I wonder how modern architects would respond to the question of this post. I suspect many would immediately question the premise. I can imagine them lashing out: &amp;ldquo;They&amp;rsquo;re not always ugly. And besides, you&amp;rsquo;re being nostalgic!&amp;rdquo; Perhaps I would be accused of being stuck in the past, being a creature of habit, and so on. Maybe some would agree that a few modern buildings are ugly, but surely not &lt;em>all&lt;/em> of them. And what could explain the difference in beauty between these modern buildings but design?&lt;/p>
&lt;p>But ultimately I do think that, &lt;em>generally&lt;/em>, old buildings are beautiful, and, &lt;em>generally&lt;/em>, new buildings are not.&lt;/p>
&lt;p>I do like the idea of a modern building. Old buildings are poorly insulated, and typically don&amp;rsquo;t come with 21st century niceties. New buildings seem better suited to life in this day and age. I&amp;rsquo;m not one to wish for days gone by; I want to like modern buildings, but I&amp;rsquo;m finding it too hard.&lt;/p>
&lt;h1 id="built-for-profit">Built for Profit?&lt;/h1>
&lt;p>There are other possible answers that, while interesting, quickly fail to be satisfactory upon further thought. One such answer is that it all comes down to how quickly and cheaply buildings can be erected these days. It comes down to money. But that barely makes sense to me, because it would suggest that older buildings were built &lt;em>without&lt;/em> an eye for profit. That can&amp;rsquo;t possibly be true. People didn&amp;rsquo;t become greedy only in recent times. Greed has always been present in human history.&lt;/p>
&lt;p>It&amp;rsquo;s unfortunate that this problem has occurred at all. If you dislike a painting, you can simply avert your gaze. But if you dislike modern architecture, where do you go?&lt;/p>
&lt;p>Well, trying to look at the bright side, functionally at least, modern buildings don&amp;rsquo;t seem so bad. They&amp;rsquo;re energy efficient, and&amp;hellip; well, that&amp;rsquo;s about it. Large windows too, I guess, for letting in more light. Although I never felt the windows of old buildings were too small.&lt;/p>
&lt;p>At last, after theorizing for a long time and having entertained and rejected numerous possibilities, I think I may actually have an answer that can hold up. But before I can be more certain, I&amp;rsquo;ll have to arrange for a small experiment.&lt;/p></description></item><item><title>Enthusiast Bias</title><link>https://benhsz.github.io/enthusiast-bias/</link><pubDate>Wed, 08 Jun 2022 18:08:51 +0200</pubDate><guid>https://benhsz.github.io/enthusiast-bias/</guid><description>&lt;p>There seems to be an awfully long list of cognitive biases out there and I&amp;rsquo;ve wondered whether what I&amp;rsquo;ve recently observed is on &lt;!-- raw HTML omitted -->that list.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> I did some searching and I couldn&amp;rsquo;t really find anything that fit the bill.&lt;/p>
&lt;p>What is a cognitive bias, anyway? It seems that whenever people exhibit a pattern of unexpected or irrational behavior, it can be called a bias. In any case, this is about an interesting phenomenon I discovered and try to be aware of.&lt;/p>
&lt;p>Cognitive biases seem to be backed by at least &lt;em>some&lt;/em> science. Well, there&amp;rsquo;s no science here I&amp;rsquo;m afraid. But I&amp;rsquo;ve noticed enough peculiarities to give a description.&lt;/p>
&lt;p>I enjoy watching product reviews on YouTube and observing a reviewer&amp;rsquo;s take on certain products. I particularly enjoy watching reviews on sports cars from sports car enthusiasts, colloquially known as &lt;em>petrolheads&lt;/em>. Some of these reviews are very well done. The result is like a film; riveting music, dramatic voice-overs, dynamic aerial shots, and so on.&lt;/p>
&lt;p>What I&amp;rsquo;ve noticed is this: such reviewers tend to be more positive about the product than usual.&lt;/p>
&lt;p>Take sports cars, for instance. Modern sports cars. Oh, my god, they are hideous. If not outright hideous, the exterior design is, at best, passable. I&amp;rsquo;m especially aghast at how ugly modern Ferraris are.&lt;/p>
&lt;p>But I&amp;rsquo;ve noticed when enthusiasts do reviews, they seem to be generally positive about exterior designs.&lt;/p>
&lt;p>Here&amp;rsquo;s an example: &lt;a href="https://youtu.be/-YAWhKeRtGw?t=73">video review of the Ferrari 296 GTB @ 1:13&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Stunning, isn&amp;rsquo;t it?&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>What!?&lt;/em> I thought nothing of the sort when I saw first saw this car. The design of the front makes a silly face, the rear tail light design is neither here nor there, and worst of all is the side intake design with that topsy-turvy bulge. That last part is possibly an attempt to harken back to the design of the Dino 206/246 GT. Whatever it is, it&amp;rsquo;s not successful.&lt;/p>
&lt;h1 id="a-strangely-glowing-review">A Strangely Glowing Review&lt;/h1>
&lt;p>I&amp;rsquo;ve thought about how my feelings regularly seemed to deviate from that of the reviewer. What seems to be going on here is actually kind of obvious. Enthusiasts are generally more positive, or at least &lt;em>express themselves&lt;/em> more positively, than average. Doing the kind of work that&amp;rsquo;s needed for making such reviews takes considerable effort. If someone who thinks modern cars look nasty were to do such work, they might eventually quit. Inevitably, the kind of people that regularly do high-effort reviews of a particular category of product, believe that the products in that category are &lt;em>worth the effort&lt;/em>, and therefore do not think too negatively of the products. The result: unexpectedly positive commentary.&lt;/p>
&lt;p>This sounds a lot like self-selection bias. Perhaps enthusiast bias can be thought of as a specific kind of self-selection bias.&lt;/p>
&lt;p>It&amp;rsquo;s not just sports car reviews. For years I&amp;rsquo;ve wondered why video game journalists give out such high scores when it seems the scores are a bit&amp;hellip; undeserved. Again, doing the work needed for a full review of a modern game takes serious effort. This kind of work is done by reviewers again and again. The people that think modern games kind of suck are not going to be the ones that put in this kind of work. That means the people willing to do the work are people who&amp;hellip; &lt;em>*shudder*&lt;/em> think that modern games are actually kind of awesome.&lt;/p>
&lt;p>After having realized such a bias exists, it&amp;rsquo;s something I try to keep in mind when reading or watching a &amp;lsquo;professional&amp;rsquo; review. User reviews are less affected by this phenomenon, for obvious reasons. But then again, those reviews could involve another sort of bias.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/List_of_cognitive_biases">https://en.wikipedia.org/wiki/List_of_cognitive_biases&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Art Transcends</title><link>https://benhsz.github.io/art-transcends/</link><pubDate>Wed, 30 Mar 2022 11:42:49 +0200</pubDate><guid>https://benhsz.github.io/art-transcends/</guid><description>&lt;p>&lt;img src="https://benhsz.github.io/images/art.jpg" alt="searching for the definition of art">&lt;/p>
&lt;p>After having completely nailed the definition of good design, I thought I might write something about the definition of art next. It&amp;rsquo;s not a subject that has kept me up at night, but it is an interesting question nevertheless, a question I have leasurely thought about over the course of my adult life. I get the impression that a lot of people, including artists, art critics and art lovers, find it difficult to provide an exact definition, which is why I think it&amp;rsquo;s an interesting question. What is art? Why is it hard to define what art is?&lt;/p>
&lt;p>There&amp;rsquo;s something particularly nebulous about the question of when, exactly, something is or is not art.&lt;/p>
&lt;p>There are paintings that give me the impression of being art, but on a closer look don&amp;rsquo;t reveal anything interesting. For instance, an exquisitely detailed landscape, showing great skill from the painter, could nevertheless appear empty. This is fascinating, because how it can show such things as rivers, mountains, grassy hills and still appear empty? These are the kind of paintings I wouldn&amp;rsquo;t consider to be art, although some would disagree, perhaps even scoff at my dismissal.&lt;/p>
&lt;h1 id="definitions">Definitions&lt;/h1>
&lt;p>Some would define art as something that was made with creativity. If you draw something well, it took a certain amount of creativity, and it is then art, period. That has an air of plausibility to it, but ultimately doesn&amp;rsquo;t hold up. I&amp;rsquo;ve made plenty of sketches and drawings that I don&amp;rsquo;t consider to be art. They&amp;rsquo;re just drawings. There&amp;rsquo;s more to art than just a series of pencil strokes put on paper without too much thought. Art seems to have something embedded into it, something that goes beyond the media by which it was made; a particular feeling, or train of thought.&lt;/p>
&lt;p>Some would define art as &lt;em>any&lt;/em> sort of self-expression, but there&amp;rsquo;s so much that would fall under that definition, it would make many, many things in our world count as art. Virtually everything would be art. Virtually everyone would be an artist! If everything is art, nothing is art, and so the word becomes meaningless.&lt;/p>
&lt;p>Is art then &lt;em>creative&lt;/em> self-expression? This definition seems to suffice. And you could leave it at that. But then what was that nebulous feeling from earlier about? It seems there&amp;rsquo;s a bit more to it than this.&lt;/p>
&lt;p>If you ever happen to find something interesting, you may feel like sharing it with someone and talk about your thoughts on why it caught your interest. You&amp;rsquo;d be expressing yourself on something that has captivated you. This is the kind of expression people regularly do in their daily lives. That&amp;rsquo;s not art.&lt;br>
But if you take a different approach, and express that same thing through an act involving creativity, the expression has a chance to become empowered, and go beyond the ordinary kind of expression. So I arrive at my preferred definition:&lt;/p>
&lt;p>Art is expression that transcends the ordinary.&lt;/p>
&lt;h1 id="theory-of-relativity">Theory of Relativity&lt;/h1>
&lt;p>When does a creative work seem to go beyond the ordinary? This could explain that nebulous feeling from earlier. What is ordinary creative expression could appear as &lt;em>extraordinary&lt;/em> to others, like some of my simple sketches. Or vice versa, like those works appearing so ordinary to the casual observer, that they comment they could have easily made it themselves. Thus it seems there is an aspect of relativity in the way we experience art.&lt;br>
A crude drawing on a wall would appear to us as an everyday sort of thing. Would you call that art? I wouldn&amp;rsquo;t. But what if that crude drawing was made over 30,000 years ago? That&amp;rsquo;s definitely not something you see everyday!&lt;/p>
&lt;p>There are times when people are so impressed by a product&amp;rsquo;s design, they say it is not merely design, but art. I believe what they mean is that it rises so high above the typical sort of design you experience everyday, that it makes for an extraordinary experience.&lt;br>
That still doesn&amp;rsquo;t make it art, though. Design resolutely prioritizes the fulfillment of the user&amp;rsquo;s needs and wishes. It is this resolution that compels the creative work to shrug off the creator&amp;rsquo;s voice, gaining independence as a result. That doesn&amp;rsquo;t happen with art. Extraordinary design is design after all.&lt;/p>
&lt;p>There are also times when people seem unanimous in their judgment that a particular work is a great work of art&amp;mdash;a masterpiece&amp;mdash;the immense creative energy involved combusting like rocket fuel, propelling it to a place few works ever reach.&lt;/p>
&lt;p>Great works of art can have an almost surreal, dream-like quality. Indeed, art can be memorable, while the unthinking expression we do everyday is forgettable.&lt;/p>
&lt;p>It&amp;rsquo;s good to express yourself. Even better to express yourself with a creation that will be remembered long after you&amp;rsquo;re gone.&lt;/p></description></item><item><title>What Is Good Design?</title><link>https://benhsz.github.io/what-is-good-design/</link><pubDate>Thu, 30 Dec 2021 12:18:31 +0100</pubDate><guid>https://benhsz.github.io/what-is-good-design/</guid><description>&lt;p>Whenever I write about design on this blog, it is specifically about what users get to experience. You can call that user experience design or user-centered design. With that in mind, let&amp;rsquo;s proceed.&lt;/p>
&lt;p>Say you were taking a stroll in the forest when, suddenly, you injure your leg, and it has become difficult to walk. By sheer cosmic coincidence, you notice a thick branch on the ground strong enough to serve as a crutch. After trying it out as a crutch, you notice it is impractical to hold onto. After doing a bit of crafting with a pocket knife, it became easier to use, allowing you to hobble your way back home.&lt;/p>
&lt;p>I&amp;rsquo;d say that&amp;rsquo;s about it. The act of crafting that branch into a crutch was design. Personally, I don&amp;rsquo;t find the definition of design to be particularly interesting. Good design on the other hand.&lt;/p>
&lt;blockquote>
&lt;p>Good design serves well.&lt;/p>
&lt;/blockquote>
&lt;p>What does it mean to serve well? It is understood that design fulfills a purpose. If it does that well, then is that good design?&lt;/p>
&lt;p>There can be problems with the design that go beyond simply not achieving its purpose. Unexpected, negative consequences may result.&lt;/p>
&lt;h1 id="problematic-design">Problematic Design&lt;/h1>
&lt;p>When is a design problematic? Suppose you were designing a videogame. At the very least, the videogame should be engaging. During the development, it&amp;rsquo;s possible the game fails to be engaging. Is that problematic? Well, it doesn&amp;rsquo;t filfull its purpose, and therefore, it&amp;rsquo;s not good design. But it&amp;rsquo;s possible for it to achieve its purpose, and also not be good design.&lt;/p>
&lt;p>Suppose the videogame is finished and the end product is as engaging as you had hoped. The game sold very well. They&amp;rsquo;re even talking about it on the news. But wait. These news reports are about&amp;hellip; deeply frustrated players throwing their controllers at the screen with such velocity that it destroys their television. Ah, well, sometimes, videogames can be a bit frustrating! Unfortunately, the reason why this became a news report, is that it seems to be happening an awful lot with &lt;em>this&lt;/em> particular videogame. Not before long, it is known as &lt;em>that game&lt;/em>, the game that causes so many people to obliterate their property in fits of rage and frustration.&lt;/p>
&lt;p>Is this problematic? It&amp;rsquo;s starting to sound like it. Does that mean you cannot consider this videogame to be good design, despite filfulling its purpose? At which point, exactly, do you decide that the design is problematic? These are difficult questions to answer.&lt;/p>
&lt;p>Design serves. Good design serves well.&lt;/p>
&lt;p>Are the people in the above example served well? They dealt with frustration. Other designs could lead to more severe problems, such as environmental degradation. If a design&amp;rsquo;s purpose is achieved well, it serves well. But if that same design is problematic, &lt;strong>there is a disservice&lt;/strong>. If that disservice is large enough, the positive aspects will be negated. If so, you will have served, but not served well.&lt;/p>
&lt;h1 id="the-user">The User&lt;/h1>
&lt;p>Why is good design so hard to achieve? In no small part, it is because user-centered design is meant to accommodate human beings, and human beings are complicated creatures.&lt;/p>
&lt;p>I&amp;rsquo;ve wondered: Would designing for a simpler creature make things easier? Maybe. But what is a simpler creature? Even creatures that you could think of as simple, like ants, demonstrate complex behavior. They, like us, underwent evolutionary processes over a vast period of time. If that&amp;rsquo;s what&amp;rsquo;s responsible for the complexity, then good design for any living thing at all is bound to be a difficult endeavor.&lt;/p></description></item><item><title>My Answer to The Parenthesis Problem</title><link>https://benhsz.github.io/my-answer-to-the-parenthesis-problem/</link><pubDate>Tue, 16 Nov 2021 15:48:31 +0200</pubDate><guid>https://benhsz.github.io/my-answer-to-the-parenthesis-problem/</guid><description>&lt;p>As I wrote in the &lt;a href="https://benhsz.github.io/the-parenthesis-problem">previous post&lt;/a>, the solution to the problem is to have the editor visualize the code a certain way while having the programmer&amp;rsquo;s inputs, and the programming language syntax, remain the same.&lt;/p>
&lt;p>The idea I present here takes advantage of the fact that there are temporary and interactive aspects to code. When code is not yet finished you might have opening parentheses that have no closing counterparts. Assuming the code is finished, and has the usual formatting, the editor would change the code&amp;rsquo;s appearance as follows.&lt;/p>
&lt;pre>&lt;code>(define (factorial n)
(if (zero? n)
1
(* n (factorial (sub1 n)))))
🡫
define (factorial n)
if |zero? n
1
|* n (factorial (sub1 n)
&lt;/code>&lt;/pre>
&lt;p>If unfinished or incorrectly indented, the editor would make the code look a certain way. The &amp;lsquo;finished&amp;rsquo; look above builds on that. This makes many parentheses visually obsolete and lets the text&amp;rsquo;s formatting do the job. The unseen parentheses enable the editor to provide such visualizations.&lt;/p>
&lt;h1 id="in-detail">In Detail&lt;/h1>
&lt;p>What the finished look does specifically:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Remove the &amp;lsquo;outer&amp;rsquo; parentheses:&lt;/p>
&lt;pre>&lt;code> (define X 5)
(define Y 4)
(define Z (+ 2 3))
define X 5
define Y 4
define Z (+ 2 3)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Abstract pile-ups of closing parentheses occurring at the end of the line into one closing parenthesis:&lt;/p>
&lt;pre>&lt;code> (add1 (add1 (add1 (add1 (add1 0)))))
add1 (add1 (add1 (add1 (add1 0)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make parentheses appear as bars if:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>They are part of a &amp;rsquo;list-like&amp;rsquo; format (for lack of a better term) and&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Their respective closing parenthesis is at the end of the same line:&lt;/p>
&lt;pre>&lt;code>(if (zero? n)
(add1 n)
(sub1 n))
if |zero? n
|add1 n
|sub1 n
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;p>The unfinished look gives opening parentheses with no closing counterpart a different shape.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/add1.gif" alt="add1 gif">&lt;/p>
&lt;p>The incorrect indentation look provides visual cues to point out any incorrect or atypical indentation.&lt;/p>
&lt;pre>&lt;code> (define X 5)
(define Y 4)
(define Z (+ 2 3))
define X 5
→ define Y 4
→ define Z (+ 2 3)
&lt;/code>&lt;/pre>
&lt;p>The availability of these visualizations makes the &lt;a href="https://benhsz.github.io/images/lbp/lbp.png">finished look&lt;/a> possible.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/factorial.gif" alt="factorial gif">&lt;/p>
&lt;h1 id="questions">Questions&lt;/h1>
&lt;p>&lt;strong>Implementation&amp;hellip;?&lt;/strong>&lt;br>
I can&amp;rsquo;t say when I&amp;rsquo;ll get around to implementing what I&amp;rsquo;ve described, as I&amp;rsquo;m an inexperienced programmer. That said, anyone interested in implementing, copying or modifying this proposal is free to do so.&lt;/p>
&lt;p>&lt;strong>How to edit such code?&lt;/strong>&lt;br>
If you would previously edit some code by finding the appropriate closing parens in a massive pile-up of &lt;code>))))))&lt;/code>, where would you now place the cursor? This means the editing experience changes a bit. One possible solution is to have parentheses show up where you put the cursor, essentially toggling back to the text view for that particular line of code.&lt;/p>
&lt;p>It&amp;rsquo;s likely that for users of editing tools like paredit, the editing experience would remain the same.&lt;/p>
&lt;p>&lt;strong>What to call an implementation of this proposal?&lt;/strong>&lt;br>
The project name for this idea was Lisp Beyond Parentheses, but I think an implementation should have a more descriptive name.
I would consider calling it Adaptive Code Visualization.&lt;/p></description></item><item><title>The Parenthesis Problem</title><link>https://benhsz.github.io/the-parenthesis-problem/</link><pubDate>Tue, 16 Nov 2021 15:45:31 +0200</pubDate><guid>https://benhsz.github.io/the-parenthesis-problem/</guid><description>&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/keyboard.jpg" alt="keyboard image">&lt;/p>
&lt;p>Lisp, referring to the category of programming languages, uses lists to do computer programming. In order for this to be useful, many lists are needed. And not just a succession of lists; items in a list can be another list, and &lt;em>that&lt;/em> list could contain another list.&lt;/p>
&lt;p>Programming in Lisp, short for List Processing, means having many lists appear on the programmer&amp;rsquo;s screen. To know where lists begin and end, the notation for these lists involves parentheses. The result: parentheses absolutely &lt;em>everywhere&lt;/em>. This is problematic, because after a certain point it can become difficult to understand what&amp;rsquo;s going on.&lt;/p>
&lt;p>Few programming languages in common use work like this. Commonly used programming languages, like Python, JavaScript, C, don&amp;rsquo;t use this kind of syntax. And so, they don&amp;rsquo;t have this kind of problem.&lt;/p>
&lt;p>With this problem being unique to Lisp, why bother with Lisp? The answer is that having a programming language syntax work this way brings all sorts of unique advantages with it. Indeed, much has been written about &lt;!-- raw HTML omitted -->this. &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted -->&lt;br>
This is why Lisp continues to see some use today in various forms, despite the parenthesis problem.&lt;/p>
&lt;p>Attempts have been made to solve this problem by changing the syntax. But the syntax isn&amp;rsquo;t the problem. The problem concerns itself with having a certain kind of information (code), and the need to communicate the meaning of this information to the user. Rather than inundate the user with parentheses, something else should be shown. Something that&amp;rsquo;s easier to understand. The question is: what is that thing? What is the alternative view to this type of computer code?&lt;/p>
&lt;h1 id="problem-solving">Problem-solving&lt;/h1>
&lt;p>Computer programming is done on a computer, and editing programs are used for that purpose. These programs display the code that is being worked on.&lt;/p>
&lt;p>Rather than change the code, the idea is to change how the code is displayed in the editor&amp;hellip;&lt;/p>
&lt;p>Let&amp;rsquo;s make an attempt to solve this problem by experimenting on a sample of code.&lt;/p>
&lt;pre>&lt;code>(define (factorial n)
(if (zero? n)
1
(* n (factorial (sub1 n)))))
&lt;/code>&lt;/pre>
&lt;p>If the parentheses present such difficulty, why not just&amp;hellip; &lt;em>not&lt;/em> visualize them?&lt;/p>
&lt;pre>&lt;code> define factorial n
if zero? n
1
* n factorial sub1 n
&lt;/code>&lt;/pre>
&lt;p>Well. That was easy.&lt;/p>
&lt;p>But wait. What if I forget to type the parentheses? What if I type a closing instead of opening parenthesis? That sort of thing would entirely change the meaning of the code, and I wouldn&amp;rsquo;t be able to tell the difference.&lt;/p>
&lt;p>Let&amp;rsquo;s continue on a screenshot of code so we can tweak the image any way we want. Rather than replace parentheses with blank characters, how about we just reduce or minimize the shapes, by replacing them with, say, dots?&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/code-dots.png" alt="code image">&lt;/p>
&lt;p>That&amp;rsquo;s better, but&amp;hellip; that still doesn&amp;rsquo;t solve the problem of not knowing when something starts or ends. We&amp;rsquo;re going to need symbols that are distinct.&lt;/p>
&lt;p>So instead of dots, how about half circle shapes.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/code-halfcircles.png" alt="code image with half circles">&lt;/p>
&lt;p>Now we&amp;rsquo;re getting somewhere.&lt;/p>
&lt;p>This is an alternative, but we need to remember we&amp;rsquo;re not just looking for an alternative. We&amp;rsquo;re looking for something that&amp;rsquo;s strictly better than what we had before. Is this really better? Now that I look at this example a bit more, I&amp;rsquo;m noticing it&amp;rsquo;s a bit difficult to read. I can&amp;rsquo;t tell whether that half circle shape is opening or closing without examining it carefully. Maybe the shapes are just a bit too small.&lt;/p>
&lt;p>So first we got rid of parentheses entirely, and while that seemed nice at first, all that did was turn the &amp;rsquo;too much information&amp;rsquo; problem into a &amp;rsquo;not enough information&amp;rsquo; problem. Changing them into dots nearly worked, but it became clear we needed something that would also tell us where something starts and ends. Taking that into account, the dots needed to be distinct, so we ended up with half circle shapes. While what we have now is promising, it&amp;rsquo;s not quite satisfactory because those half circle shapes are just a bit too small. It would seem the last step is to simply make them larger.&lt;/p>
&lt;p>How about making them about the same size as the other characters?&lt;/p>
&lt;p>If that&amp;rsquo;s the last problem we need to solve, the final result could be the alternative view to the code we&amp;rsquo;ve been looking fo&amp;ndash;&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/lbp/code-largecircles.png" alt="image with big half circles">&lt;/p>
&lt;h1 id="fail">Fail&lt;/h1>
&lt;p>&lt;strong>Wow&lt;/strong>. Okay, that did not work at all. All we ended up doing was recreate parentheses. An ugly, clumsy version of parentheses at that.&lt;/p>
&lt;p>I don&amp;rsquo;t get it. I appreciate useful things. If visualizing parentheses is useful, why does the sight of them vex me so? Where is this feeling of dissatisfaction coming from?&lt;/p>
&lt;p>Maybe that failed attempt just wasn&amp;rsquo;t radical enough. Rather than try to replace the parentheses with different characters, perhaps the answer is to render something &lt;em>completely&lt;/em> different. By drawing circles on the screen to represent lists, for example. Sure, you&amp;rsquo;d end up with lots of circles on the screen, and it would probably be way worse than parentheses, but it&amp;rsquo;s evidence an alternative view is possible. What other alternative views are there? Which can produce the desired result?&lt;/p>
&lt;p>This reasoning may seem odd, but I happen to believe that the feeling of dissatisfaction is in fact evidence that the solution already exists. It just needs to be found.&lt;/p>
&lt;h1 id="several-attempts-later">Several Attempts Later&amp;hellip;&lt;/h1>
&lt;p>Submitted for your approval: &lt;a href="https://benhsz.github.io/my-answer-to-the-parenthesis-problem">My Answer to The Parenthesis Problem&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;em>Why Lisp?&lt;/em> &lt;a href="http://blog.rongarret.info/2015/05/why-lisp.html">http://blog.rongarret.info/2015/05/why-lisp.html&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;em>How Lisp Became God&amp;rsquo;s Own Programming Language&lt;/em>&lt;br>
&lt;a href="https://twobithistory.org/2018/10/14/lisp.html">https://twobithistory.org/2018/10/14/lisp.html&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;em>An Intuition for Lisp Syntax&lt;/em> &lt;a href="https://stopa.io/post/265">https://stopa.io/post/265&lt;/a>&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>I have my own idea of what I think the biggest advantage of Lisp is, which I may write about in the future.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Making a Website in 2021</title><link>https://benhsz.github.io/making-a-website-in-2021/</link><pubDate>Wed, 13 Oct 2021 17:41:10 +0200</pubDate><guid>https://benhsz.github.io/making-a-website-in-2021/</guid><description>&lt;p>Search for it on the internet, and there&amp;rsquo;s no shortage of results that will tell you just how easy it is to create a website. You may feel like you don&amp;rsquo;t know enough about how websites work, but that&amp;rsquo;s okay. You can create a website without needing to know &lt;em>anything&lt;/em> about how a website works. Making a website today is easier than ever!&lt;/p>
&lt;p>The first thing I asked myself was what kind of a website I wanted to have. This was easy to answer. Some kind of blog, where I could just post my rambling thoughts. A blog like any other blog. A simple blog. Mostly text, with the occasional image sprinkled in.&lt;/p>
&lt;p>Then I thought about where I could host this website. As a beginner programmer, I came upon &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a>. On the GitHub Pages website, there&amp;rsquo;s a little introduction video that explains that creating a website can be a hassle, even for those with the know-how. But not to worry. With GitHub Pages, it&amp;rsquo;s a lot easier. Indeed, there are many services like GitHub Pages that offer a similar message. I even came upon a website that boasted you could get everything up and running in just 5 minutes.&lt;/p>
&lt;p>After deciding to go with GitHub Pages, I had to choose a theme. This step would be easy, I thought. I was looking for something &lt;em>simple&lt;/em>. Something that focused on text. Something that people would find easy to read. Thus I began to try out some themes.&lt;/p>
&lt;p>It didn&amp;rsquo;t take long for the dissatisfaction to set in with the themes I had available to me. Actually selecting a theme was effortless; all you had to do was navigate to the appropriately-named Theme Chooser and, just, like, pick a theme, yo. But strangely, I found that none of the available themes were particularly good. Even the one literally named &amp;lsquo;minimalist&amp;rsquo;.&lt;/p>
&lt;h1 id="keep-it-simple">Keep It Simple&lt;/h1>
&lt;p>At this point, I began to consider an alternative. I recall visiting some website that was like a blog, but it didn&amp;rsquo;t seem to have a design. It had an old-fashioned look, like it was made in another, previous age of the internet. The font would default to Times New Roman (on Windows), and text would render as wide as the browser window was wide. I thought: maybe I should forget all this theme nonsense and go down that road.&lt;/p>
&lt;p>But I decided against it. In this day and age, people have certain expectations of a website, and it&amp;rsquo;s better to just meet to those expectations. Further, as I had desktop viewers in mind, &lt;!-- raw HTML omitted -->text rendering as wide as the browser window&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> was a big no-no for me.&lt;!-- raw HTML omitted --> Perhaps in the past, when desktop computers had small 14 inch screens, this was acceptable. In this age of large wide-screen and ultra-wide-screen monitors though, it would be too annoying to deal with. Better it is to just keep searching for the right theme, I decided.&lt;/p>
&lt;p>The GitHub Pages documentation explained that you can choose from more themes if you installed Jekyll. I may have read some blogs where it said it was made with Jekyll. What &lt;em>is&lt;/em> Jekyll? A static site generator, you say?&lt;/p>
&lt;p>And down that rabbit hole I went. But before I installed Jekyll, I was curious to see some previews of those &amp;lsquo;more themes&amp;rsquo; that GitHub Pages did not offer out of the box.&lt;/p>
&lt;h1 id="any-theme-you-like">Any Theme You Like&lt;/h1>
&lt;p>While searching for Jekyll themes, I became more curious about other static site generators. &lt;!-- raw HTML omitted -->How many of these static site generators are there?&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> How do they work? What, exactly, do they do? Is Jekyll &amp;rsquo;the best one&amp;rsquo;? Are static site generators necessary if you just want a simple blog?&lt;/p>
&lt;p>As I continued to browse for themes, I again became dissatisifed. There was no shortage of &amp;lsquo;snazzy&amp;rsquo; themes, but what about simple themes? Unimpressed, and increasingly curious, I began to take a peek at themes for other SSG&amp;rsquo;s, such as Hugo and Zola.&lt;/p>
&lt;p>While browsing Hugo themes, I found myself enjoying it more than when I looked at Jekyll themes. Everything just looked nicer. Looking back at it now, I wonder why that is. Hugo is newer than Jekyll. Perhaps themes are just a bit more modern-looking as a result. I&amp;rsquo;m not entirely sure what the reason is. In any case, I eventually found a theme I liked.&lt;/p>
&lt;p>Then I began second-guessing. Is this really what I want? Maybe I should keep looking. As someone with more self-awareness than what&amp;rsquo;s good for me, I was acutely aware of just &lt;em>how much time&lt;/em> I was wasting looking for a theme.&lt;/p>
&lt;p>I began to ask myself: how many hours over the course of several days have I wasted already? What the heck is going on here? Just pick a theme, dumbass! It doesn&amp;rsquo;t matter! Focus on starting the blog. You can always change the theme later.&lt;/p>
&lt;p>That&amp;rsquo;s right. I can always change the theme later. Knowing that, why is it still so hard to choose something?&lt;/p>
&lt;p>If I had to buy new furniture, I would have a hard time choosing, because once I&amp;rsquo;ve had something delivered, I can&amp;rsquo;t just snap my fingers and change it to something else. And furniture ain&amp;rsquo;t free. Having difficulty deciding in that case would make sense.&lt;/p>
&lt;p>So why would choosing a theme be this difficult? I already knew that when confronted with lots of choice, people act weird. But I haven&amp;rsquo;t studied this &lt;!-- raw HTML omitted -->issue&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> carefully.&lt;/p>
&lt;h1 id="hold-the-serifs-please">Hold the Serifs, Please&lt;/h1>
&lt;p>Having browsed a multitude of themes, it slowly became clear what I was looking for. Single-column, sans serif, dark text on &lt;!-- raw HTML omitted -->a white background.&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> The font choice especially seemed to have the largest effect on the overall look of the site. That makes sense, given that what I was interested in dealt with text, not photographs or videos.&lt;/p>
&lt;p>The difference between a serif and sans serif font is interesting. My own understanding&amp;ndash;having no education in typography or what have you&amp;ndash;is that serif fonts are just more intricate looking, and have a certain feel that suits story-telling. Sans serif is for stuff that&amp;rsquo;s more to the point.&lt;/p>
&lt;p>On one hand, I was interested in telling stories. But I also wanted to just get to the point. I guess the story-telling I wanted to do, was more like giving explanations, rather than a &lt;em>Once upon a time&amp;hellip;&lt;/em> sort of thing.&lt;br>
I decided to restrict my search for themes with sans serif fonts.&lt;/p>
&lt;p>(It&amp;rsquo;s technically possible to customize a theme&amp;rsquo;s font settings. Having already spent hours searching for a theme, I feared I would spend even longer customizing a theme to my liking, and quickly decided against it.)&lt;/p>
&lt;p>Unfortunately, the websites on which I browsed for themes didn&amp;rsquo;t seem to have any options that let you search for something based on fonts, or layout even. I could only find a highly general search setting, such as &amp;lsquo;Blog&amp;rsquo; or &amp;lsquo;Minimalist&amp;rsquo;. It seems WordPress does let you search for layout, but also has no serifs/sans serifs option.&lt;/p>
&lt;p>So I decided to first focus on one-column layouts, which I could browse for by just paying attention to the thumbnail images, then manually filter out the ones with serif fonts from my list.&lt;/p>
&lt;p>More time passed. And, at long last, &lt;!-- raw HTML omitted -->I managed to settle on a theme.&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted --> Somehow.&lt;/p>
&lt;h1 id="lift-off">Lift-off&lt;/h1>
&lt;p>Now that we&amp;rsquo;re up in the air, you might ask: were the claims true, that making a website today is easier than ever?&lt;/p>
&lt;p>In order to use Hugo instead of Jekyll with GitHub Pages, a bit more configuration than usual was needed. In the last few steps I undertook, my mind yet reeled from having dealt with such an endless sea of choice.&lt;br>
The dissatisfaction. The second-guessing. The agonizing. How I endlessly, endlessly browsed for themes!&lt;/p>
&lt;p>Fortunately, a quick search on the internet told me all the configuration I needed to know. Why, it would take no more than a few minutes.&lt;br>
So, to answer the question: was it easy?&lt;/p>
&lt;p>Yes. I suppose it was.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Firefox has a feature called &lt;a href="https://support.mozilla.org/en-US/kb/firefox-reader-view-clutter-free-web-pages">Reader View&lt;/a> that could come in handy in such situations, but I always forget to use it whenever I come across a webpage where it could be useful.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://jamstack.org/generators/">A surprising amount.&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/The_Paradox_of_Choice">https://en.wikipedia.org/wiki/The_Paradox_of_Choice&lt;/a>&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>There are themes that default to a certain background but can take user preferences into account, should a user preference be detected. &lt;a href="https://github.com/LukasJoswiak/etch">What I&amp;rsquo;m using&lt;/a> at the time of writing is such a theme.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>I like it well enough. The links are my favorite part. There&amp;rsquo;s just nothing that says &amp;lsquo;hyperlink&amp;rsquo; quite like beautiful bright blue text. It seems in the end I did go for something old-fashioned after all.&amp;#160;&lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>The Struggle with Prefix Syntax</title><link>https://benhsz.github.io/the-struggle-with-prefix-syntax/</link><pubDate>Sun, 10 Oct 2021 22:34:39 +0200</pubDate><guid>https://benhsz.github.io/the-struggle-with-prefix-syntax/</guid><description>&lt;p>If you&amp;rsquo;re programming in a Lisp-family programming language, working with
numbers is going to be a little bit different.&lt;/p>
&lt;p>Some might say that, while it may seem odd at first, you can get used to it.&lt;br>
That is to say, it&amp;rsquo;s not bad. Just&amp;hellip; different.&lt;/p>
&lt;p>Prefix means that where you would normally have the operator between operands,
you would have only one operator at the very beginning.&lt;/p>
&lt;p>In my experience, this is fine for when you need to add or multiply. For some reason that isn&amp;rsquo;t
confusing at all; it really is just nothing more than &lt;em>different.&lt;/em>&lt;/p>
&lt;p>But for other things like greater-than, less-than, minus, it&amp;rsquo;s not so simple.
When I started out programming in Lisp, I thought prefix syntax seemed to present only a minor difficulty. But now that some time has passed, I&amp;rsquo;ve given some thought to my experience with it.&lt;/p>
&lt;p>And it&amp;rsquo;s actually mind-boggling how confusing it is.&lt;/p>
&lt;p>For example.&lt;/p>
&lt;p>&lt;code>(- 3 2)&lt;/code>&lt;/p>
&lt;p>I would read this as &amp;ldquo;minus three two&amp;rdquo;.&lt;/p>
&lt;p>Hang on. Let me try to read that again.&lt;/p>
&lt;p>&lt;code>(- 3 2)&lt;/code>&lt;/p>
&lt;p>Minus&amp;hellip; three&amp;hellip; two.&lt;/p>
&lt;p>But wait. &lt;em>What&lt;/em> minus three? And then there&amp;rsquo;s that two&amp;hellip;&lt;/p>
&lt;p>So is it two minus three?&lt;/p>
&lt;p>Nope.&lt;/p>
&lt;h3 id="minus-three-two--three-minus-two">Minus Three Two = Three Minus Two&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/zeJrmc8.gif" alt="Huh gif">&lt;/p>
&lt;p>I now realize it&amp;rsquo;s almost impossible to get used to because, when reading the code from left to right (as code is usually read) it
partially reads like infix notation. So it&amp;rsquo;s not that it&amp;rsquo;s different. It&amp;rsquo;s that it&amp;rsquo;s not different &lt;em>enough&lt;/em>.&lt;/p>
&lt;p>There is a way to avoid the confusion though. But we need to read it step-by-step.
First the operator, then the operands:&lt;/p>
&lt;p>&lt;code>-&lt;/code>&lt;/p>
&lt;p>&amp;ldquo;Minus.&amp;rdquo; (Hyphen, actually. But we&amp;rsquo;re just gonna have to roll with it.)&lt;/p>
&lt;p>This means we&amp;rsquo;re dealing with subtraction, so let&amp;rsquo;s see what comes after that.&lt;/p>
&lt;p>&lt;code>3 2&lt;/code>&lt;/p>
&lt;p>&amp;ldquo;Three two.&amp;rdquo;&lt;/p>
&lt;p>Now imagine the operator between the numbers.&lt;/p>
&lt;p>&amp;ldquo;Three minus two.&amp;rdquo;&lt;/p>
&lt;p>There we go.&lt;/p>
&lt;p>And if you have more numbers, like&lt;/p>
&lt;p>&lt;code>(- 9 3 2)&lt;/code>&lt;/p>
&lt;p>It should be read as &amp;ldquo;minus&amp;rdquo;&amp;hellip; &amp;ldquo;nine minus three minus two.&amp;rdquo;&lt;/p>
&lt;p>And you do this with other operators too, like&lt;/p>
&lt;p>&lt;code>(&amp;gt; X Y)&lt;/code>&lt;/p>
&lt;p>This should not be read as &amp;ldquo;greater than X Y&amp;rdquo;, which can leave you wondering: &lt;em>what&lt;/em> is greater than X? And what&amp;rsquo;s
that Y doing there?! Is Y greater than X?&lt;br>
No, no, no.&lt;/p>
&lt;p>Don&amp;rsquo;t read it left to right in one go! Oh, sure, you can read all other code left to right in one go, but not this part.&lt;/p>
&lt;p>Just repeat the previous steps. &amp;ldquo;Greater than&amp;rdquo;, take a look what you&amp;rsquo;ve got (X Y), and then&amp;hellip; &amp;ldquo;X greater than Y.&amp;rdquo;&lt;/p>
&lt;p>See? That wasn&amp;rsquo;t so bad.&lt;/p>
&lt;p>Well, actually, that was pretty bad.
It may not seem like too much ask here, but that&amp;rsquo;s because we&amp;rsquo;re forgetting the context.
A thing such as &lt;code>(&amp;gt; X Y)&lt;/code> is problematic when it is involved in a train of thought. That is, when you&amp;rsquo;re busy thinking about code.
And that&amp;rsquo;s practically always going to be the case.&lt;/p>
&lt;blockquote>
&lt;p>Let&amp;rsquo;s see here. If X is greater than Y, then&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>(&amp;gt; X Y)&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Wait&amp;hellip; greater than&amp;hellip;&lt;/p>
&lt;p>Yeah. Okay. So&amp;hellip;&lt;/p>
&lt;p>No, hang on. Greater than&amp;hellip; X? Y. Wait, what?&lt;/p>
&lt;/blockquote>
&lt;p>Train of thought: derailed.&lt;/p>
&lt;p>I know how prefix syntax is supposed to work at this point, so it&amp;rsquo;s not difficult to start typing &lt;code>(&amp;gt; X Y)&lt;/code>. But there is that small moment of second-guessing that happens when confronted with the sight of &lt;code>&amp;gt; X Y&lt;/code>, and that moment is
enough to screw me over.&lt;/p>
&lt;p>There&amp;rsquo;s no getting used to it. Instead, you just get used to having your train of thought messed up once in a while; or catch a lucky break when you only have to add or multiply.&lt;/p>
&lt;p>There might be a way to solve this problem though.&lt;/p>
&lt;h1 id="infix-readings">Infix Readings&lt;/h1>
&lt;p>The idea I propose here doesn&amp;rsquo;t involve changing the notation, but rather involves the editor, and
what it can do to make prefix syntax easier to read.&lt;/p>
&lt;p>Before I explain further, have a gander at these examples.&lt;/p>
&lt;p>If you read this
&lt;code>- 3 2&lt;/code>
as &amp;ldquo;minus three two.&amp;rdquo;&lt;/p>
&lt;p>Then the following would be read as &lt;code> -3 2&lt;/code> &amp;ldquo;minus three, two.&amp;rdquo;&lt;/p>
&lt;p>And &lt;code>-3 -2&lt;/code> as &amp;ldquo;minus three, minus two.&amp;rdquo;&lt;/p>
&lt;p>And &lt;code>- 3 - 2&lt;/code> as &amp;ldquo;minus three minus two.&amp;rdquo;&lt;/p>
&lt;p>Then, perhaps, the following could be read as&amp;hellip;?&lt;/p>
&lt;p>&lt;code>- ... 3 - 2&lt;/code>&lt;/p>
&lt;p>&amp;ldquo;Minus, three minus two.&amp;rdquo;&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;em>Bringo.&lt;/em>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Here&amp;rsquo;s what I propose the editor should do:&lt;/p>
&lt;ol>
&lt;li>Visually separate the first operator from the rest&lt;/li>
&lt;li>Create more space between the operands by doing a bit of padding&lt;/li>
&lt;li>Fill the newly created space between the operands with the appropriate symbol&amp;ndash;a ligature&lt;/li>
&lt;/ol>
&lt;p>We could call this functionality &amp;lsquo;Infix Readings&amp;rsquo;, although I&amp;rsquo;m not sure yet if that&amp;rsquo;s the right term for it.&lt;/p>
&lt;p>Rather than pad the space between the operator and the first operand as above, a similar effect can be achieved by displaying some sort of barrier around the first operator, thereby &amp;lsquo;detaching&amp;rsquo; it from the operands, and having a ligature appear connected to the operands by being visually closer to the operands than the first operator.&lt;/p>
&lt;p>That sounds a bit complicated. But no worries, I made mockups in the form of animated GIFs, showing what it would look like.&lt;/p>
&lt;h1 id="mockups">Mockups&lt;/h1>
&lt;p>Here&amp;rsquo;s a GIF showing (- 3 2).&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/3-2.gif" alt="- 3 2 gif">&lt;/p>
&lt;p>Of course, if there&amp;rsquo;s more operands, the editor will continue to fill the gaps with the appropriate symbol.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/9-3-2.gif" alt="- 9 3 2 gif">&lt;/p>
&lt;p>The programmer doesn&amp;rsquo;t input those extra minuses you see in the above GIF. That&amp;rsquo;s the editor&amp;rsquo;s doing. They show up as soon as the programmer enters a space character.&lt;/p>
&lt;p>So rather than go out of your way to imagine the appropriate operator between the operands,
the editor will just, like, &lt;em>do it for you.&lt;/em>&lt;/p>
&lt;p>And while we&amp;rsquo;re using ligatures: another thing that has bothered me is the greater-than-or-equal-to operator &lt;code>&amp;gt;=&lt;/code> which looks a bit incomprehensible to me.
We can use something that looks a bit nicer instead.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/6-4-7.gif" alt="Greater-than-or-equal-to gif">&lt;/p>
&lt;p>Prefix syntax never gave me trouble when adding or multiplying, but here&amp;rsquo;s what that would look like:&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/plusmultiply.gif" alt="Plus and multiply gif">&lt;/p>
&lt;p>I suppose you could provide options in the editor as to which operators infix readings should act upon.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/nested.gif" alt="Nested expressions gif">&lt;/p>
&lt;p>Selecting the expressions would show that those extra operators aren&amp;rsquo;t actually &amp;rsquo;there&amp;rsquo;, i.e. not entered by the programmer&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/selection.gif" alt="Selection gif">&lt;/p>
&lt;p>Here&amp;rsquo;s what it would look like if you toggled infix readings on and off. The programmer never inputs extra space
between the operands; the editor just makes it seem that way.&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/toggle.gif" alt="Toggle gif">&lt;/p>
&lt;p>Thus everything stays compatible with existing code.&lt;br>
(And also, when working with others who may not use infix readings, to prevent any
confusion as to why the heck you keep putting two spaces in expressions when there should be only one!)&lt;/p>
&lt;p>Of course, we need to remember to do this in context, as before.
That means we need to pretend like we&amp;rsquo;re busy coding.&lt;/p>
&lt;p>So let&amp;rsquo;s see, if X is greater than Y, then&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://benhsz.github.io/images/irgifs/ifthen.gif" alt="If then gif">&lt;/p>
&lt;p>Hopefully that would help us stay on track.&lt;/p>
&lt;p>P.S. At time of writing, work has not begun to implement this feature.&lt;/p>
&lt;p>Anyone interested in implementing, copying, or modifying this proposal is free to do so.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.youtube.com/watch?v=4MpyHBoiTwk">https://www.youtube.com/watch?v=4MpyHBoiTwk&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>